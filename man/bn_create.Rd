% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bn_create.R
\name{bn_create}
\alias{bn_create}
\title{Creates a bayesian network object from a list of nodes}
\usage{
bn_create(list, known_variables = NULL)
}
\arguments{
\item{list}{of node objects, created by \code{bn_node}.}

\item{known_variables}{character vector of variables that will be provided by an external dataset}
}
\value{
data.frame
}
\description{
Converts list to data frame which is a bit easier to work with, and embellishes with some useful columns.
The function performs a few checks on the list, for instance to make sure the graph is acyclic
and that variables used in the expressions are defined elsewhere or already known.
The known_variables argument is for passing a character vector of variables names
for variables that are already defined externally in a
given dataset, which can be passed to bn_simulate
whilst variable_formula is the variable name itself, this is to help with the bn_simulate function
it doesn't actually lead to self-dependence (eg var depends on var)
}
\examples{
library(dplyr)
set.seed(314159)
pop_n <- 1000
index_date <- as.Date("2020-12-08")
pfizer_name <- paste("COVID-19 mRNA Vaccine Comirnaty 30micrograms/0.3ml dose conc",
  "for susp for inj MDV (Pfizer)")
az_name <- "COVID-19 Vaccine Vaxzevria 0.5ml inj multidose vials (AstraZeneca)"
# define each variable as a node in a bayesian network
sim_list <- lst(

  registered = bn_node(
    ~ rbernoulli(n = ..n, p = 0.99)
  ),
  age = bn_node(
    ~ as.integer(rnorm(..n, mean= 55, sd=20)),
  ),
  sex = bn_node(
    ~ rfactor(n = ..n, levels = c("female", "male", "intersex", "unknown"),
              p = c(0.50, 0.49, 0, 0.01)),
    missing_rate = ~0.01
  ),
  diabetes = bn_node(
    ~ rbernoulli(n = ..n, p = 0.10)
  ),
  vaccine_date1 = bn_node(
    ~ runif(n = ..n, 0, 150),
    missing_rate = ~0.2
  ),
  vaccine_date2 = bn_node(
    ~ vaccine_date1 + runif(n = ..n, 3*7, 16*7),
    missing_rate = ~0.1,
    needs = "vaccine_date1"
  ),
  vaccine_product1 = bn_node(
    ~ rcat(n = ..n, c(pfizer_name, az_name), c(0.5, 0.5)),
    needs = "vaccine_date1"
  ),
  vaccine_product2 = bn_node(
    ~ if_else(runif(..n) < 0.95, vaccine_product1, c(az_name)),
    needs = "vaccine_date2"
  ),
  death_date = bn_node(
    ~ runif(n = ..n,  0, 1000),
    missing_rate = ~0.95
  )
)

bn <- bn_create(sim_list,known_variables = c("pfizer_name","az_name"))
}
